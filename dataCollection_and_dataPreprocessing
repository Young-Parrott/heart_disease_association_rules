{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8062170,"sourceType":"datasetVersion","datasetId":4755824}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/alecparrott/diagnosis-datamining-apriori?scriptVersionId=185774677\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-27T15:33:57.595337Z","iopub.execute_input":"2024-06-27T15:33:57.596591Z","iopub.status.idle":"2024-06-27T15:33:58.00994Z","shell.execute_reply.started":"2024-06-27T15:33:57.596539Z","shell.execute_reply":"2024-06-27T15:33:58.008518Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/heart-disease-dataset/documentation.pdf\n/kaggle/input/heart-disease-dataset/heart_statlog_cleveland_hungary_final.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"# Load the dataset into data frame\nraw_data_df = pd.read_csv('/kaggle/input/heart-disease-dataset/heart_statlog_cleveland_hungary_final.csv')\n\n# Generate sample of the dataset\nprint(raw_data_df.head())","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.01224Z","iopub.execute_input":"2024-06-27T15:33:58.012731Z","iopub.status.idle":"2024-06-27T15:33:58.048056Z","shell.execute_reply.started":"2024-06-27T15:33:58.012688Z","shell.execute_reply":"2024-06-27T15:33:58.046777Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"   age  sex  chest pain type  resting bp s  cholesterol  fasting blood sugar  \\\n0   40    1                2           140          289                    0   \n1   49    0                3           160          180                    0   \n2   37    1                2           130          283                    0   \n3   48    0                4           138          214                    0   \n4   54    1                3           150          195                    0   \n\n   resting ecg  max heart rate  exercise angina  oldpeak  ST slope  target  \n0            0             172                0      0.0         1       0  \n1            0             156                0      1.0         2       1  \n2            1              98                0      0.0         1       0  \n3            0             108                1      1.5         2       1  \n4            0             122                0      0.0         1       0  \n","output_type":"stream"}]},{"cell_type":"code","source":"# Generate descriptive Statistics about the dataset\nprint(raw_data_df.describe())","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.04954Z","iopub.execute_input":"2024-06-27T15:33:58.050183Z","iopub.status.idle":"2024-06-27T15:33:58.088651Z","shell.execute_reply.started":"2024-06-27T15:33:58.050143Z","shell.execute_reply":"2024-06-27T15:33:58.087482Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"               age          sex  chest pain type  resting bp s  cholesterol  \\\ncount  1190.000000  1190.000000      1190.000000   1190.000000  1190.000000   \nmean     53.720168     0.763866         3.232773    132.153782   210.363866   \nstd       9.358203     0.424884         0.935480     18.368823   101.420489   \nmin      28.000000     0.000000         1.000000      0.000000     0.000000   \n25%      47.000000     1.000000         3.000000    120.000000   188.000000   \n50%      54.000000     1.000000         4.000000    130.000000   229.000000   \n75%      60.000000     1.000000         4.000000    140.000000   269.750000   \nmax      77.000000     1.000000         4.000000    200.000000   603.000000   \n\n       fasting blood sugar  resting ecg  max heart rate  exercise angina  \\\ncount          1190.000000  1190.000000     1190.000000      1190.000000   \nmean              0.213445     0.698319      139.732773         0.387395   \nstd               0.409912     0.870359       25.517636         0.487360   \nmin               0.000000     0.000000       60.000000         0.000000   \n25%               0.000000     0.000000      121.000000         0.000000   \n50%               0.000000     0.000000      140.500000         0.000000   \n75%               0.000000     2.000000      160.000000         1.000000   \nmax               1.000000     2.000000      202.000000         1.000000   \n\n           oldpeak     ST slope       target  \ncount  1190.000000  1190.000000  1190.000000  \nmean      0.922773     1.624370     0.528571  \nstd       1.086337     0.610459     0.499393  \nmin      -2.600000     0.000000     0.000000  \n25%       0.000000     1.000000     0.000000  \n50%       0.600000     2.000000     1.000000  \n75%       1.600000     2.000000     1.000000  \nmax       6.200000     3.000000     1.000000  \n","output_type":"stream"}]},{"cell_type":"code","source":"# Check for missing values\nprint(raw_data_df.isna().sum())","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.090139Z","iopub.execute_input":"2024-06-27T15:33:58.090495Z","iopub.status.idle":"2024-06-27T15:33:58.097751Z","shell.execute_reply.started":"2024-06-27T15:33:58.090466Z","shell.execute_reply":"2024-06-27T15:33:58.096638Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"age                    0\nsex                    0\nchest pain type        0\nresting bp s           0\ncholesterol            0\nfasting blood sugar    0\nresting ecg            0\nmax heart rate         0\nexercise angina        0\noldpeak                0\nST slope               0\ntarget                 0\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"# Check feature types of dataset\nprint(raw_data_df.dtypes)\n\n# Check number of rows in dataset\nprint('\\nNumber of Rows in the dataset: ')\nprint(len(raw_data_df))\n\n# Check number of columns in dataset\nprint('\\nNumer of Columns in the dataset: ')\nprint(len(raw_data_df.columns))","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.100205Z","iopub.execute_input":"2024-06-27T15:33:58.100573Z","iopub.status.idle":"2024-06-27T15:33:58.117643Z","shell.execute_reply.started":"2024-06-27T15:33:58.100542Z","shell.execute_reply":"2024-06-27T15:33:58.116459Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"age                      int64\nsex                      int64\nchest pain type          int64\nresting bp s             int64\ncholesterol              int64\nfasting blood sugar      int64\nresting ecg              int64\nmax heart rate           int64\nexercise angina          int64\noldpeak                float64\nST slope                 int64\ntarget                   int64\ndtype: object\n\nNumber of Rows in the dataset: \n1190\n\nNumer of Columns in the dataset: \n12\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**From the documentation description of the data:**\n\n1. age: Given in years; Numeric\n2. sex: 1,0; Binary\n    - 1 = male\n    - 0 = female\n3. chest pain type:  1,2,3,4; Nominal\n    - 1 = typical angina\n    - 2 = atyical angina\n    - 3 = non-anginal pain\n    - 4 = asymptomatic\n4. resting blood pressure: in mm Hg, Numeric\n5. serum cholesterol: in mg/dl, Numeric\n6. fasting blood sugar: 1,0 > 120mg/dl, Binary\n    - 1 = true\n    - 0 = false\n7. resting electrocardiogram results: 0,1,2; Nomial\n    - 0 = normal\n    - 1 = having ST-T wave abnormality\n    - 2 = showing probable or definite left ventrivular hypertrophy by Estes' criteria\n8. maximum heart rate achieved: 71-202 Numeric\n9. exercise induced angina: 0,1; Binary\n    - 1 = yes\n    - 0 = no\n10. oldpeat =ST: depression; numeric\n11. the slope of peak exercise ST segment: 0,1,2 Nominal\n    - 1 = upsloping\n    - 2 = flat\n    - 3 = downsloping\n12. class: 0,1 Binary\n    - 1 = heart disease\n    - 2 = Normal","metadata":{}},{"cell_type":"code","source":"# Define Numeric, Categorical, features\nnumeric_feats = ['age', 'resting bp s', 'cholesterol', 'max heart rate', 'oldpeak']\nnominal_feats = ['ST slope', 'resting ecg', 'chest pain type']\nbinary_feats = ['sex', 'fasting blood sugar', 'exercise angina', 'target']","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.118762Z","iopub.execute_input":"2024-06-27T15:33:58.119085Z","iopub.status.idle":"2024-06-27T15:33:58.129252Z","shell.execute_reply.started":"2024-06-27T15:33:58.119057Z","shell.execute_reply":"2024-06-27T15:33:58.128228Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"# Convert nominal_feats into categories then binarize them\nchest_pain_type_var = {'chest pain type':{0:'typical angina', 1:'atypical angina', 2:'non-anginal pain', 3:'asymptomatic'}}\nresting_ecg_var = {'resting ecg': {0:'normal', 1:'having ST-T wave abnormality', 2:'probable or definite left ventricular hypertrophy'}}\nST_slope_var = {'ST slope':{0:'upsloping', 1:'flat', 2:'downsloping'}}\n\n# Change the values back to string equivalent and convert to object\nraw_data_df = raw_data_df.replace(chest_pain_type_var)\nraw_data_df = raw_data_df.replace(resting_ecg_var)\nraw_data_df = raw_data_df.replace(ST_slope_var)\n\n# Binarize with pd dummies\n#raw_data_df = pd.get_dummies(raw_data_df, columns=nominal_feats)","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.130668Z","iopub.execute_input":"2024-06-27T15:33:58.13112Z","iopub.status.idle":"2024-06-27T15:33:58.147653Z","shell.execute_reply.started":"2024-06-27T15:33:58.131088Z","shell.execute_reply":"2024-06-27T15:33:58.146132Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"raw_data_df.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.149316Z","iopub.execute_input":"2024-06-27T15:33:58.149769Z","iopub.status.idle":"2024-06-27T15:33:58.162785Z","shell.execute_reply.started":"2024-06-27T15:33:58.149726Z","shell.execute_reply":"2024-06-27T15:33:58.161799Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"age                      int64\nsex                      int64\nchest pain type         object\nresting bp s             int64\ncholesterol              int64\nfasting blood sugar      int64\nresting ecg             object\nmax heart rate           int64\nexercise angina          int64\noldpeak                float64\nST slope                object\ntarget                   int64\ndtype: object"},"metadata":{}}]},{"cell_type":"code","source":"# Uncode the binary features for analysis\nsex_var =  {'sex':{0:'female',1:'male'}}\nfasting_blood_sugar_var = {'fasting blood sugar': {0:'false', 1:'true'}}\nexercise_angina_var = {'exercise angina': {0:'no',1:'yes'}}\nclass_var = {'target': {1:'heart disease', 0:'Normal'}}\n\n# Recode the binary features for use\nraw_data_df = raw_data_df.replace(sex_var)\nraw_data_df = raw_data_df.replace(fasting_blood_sugar_var)\nraw_data_df = raw_data_df.replace(exercise_angina_var)\nraw_data_df = raw_data_df.replace(class_var)\n\n# Binarize with pd.getdummies\n#raw_data_df = pd.get_dummies(raw_data_df, columns=binary_feats)","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.164156Z","iopub.execute_input":"2024-06-27T15:33:58.164677Z","iopub.status.idle":"2024-06-27T15:33:58.18506Z","shell.execute_reply.started":"2024-06-27T15:33:58.164638Z","shell.execute_reply":"2024-06-27T15:33:58.183847Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"raw_data_df.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.186353Z","iopub.execute_input":"2024-06-27T15:33:58.186772Z","iopub.status.idle":"2024-06-27T15:33:58.196173Z","shell.execute_reply.started":"2024-06-27T15:33:58.186735Z","shell.execute_reply":"2024-06-27T15:33:58.194923Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"age                      int64\nsex                     object\nchest pain type         object\nresting bp s             int64\ncholesterol              int64\nfasting blood sugar     object\nresting ecg             object\nmax heart rate           int64\nexercise angina         object\noldpeak                float64\nST slope                object\ntarget                  object\ndtype: object"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import KBinsDiscretizer\n\n# Convert Numeric features to proper Dtype and put into discrete bins then binarize\nraw_data_df['age'] = raw_data_df['age'].astype('int')\nraw_data_df['resting bp s'] = raw_data_df['resting bp s'].astype('int')\nraw_data_df['max heart rate'] = raw_data_df['max heart rate'].astype('int')\nraw_data_df['cholesterol'] = raw_data_df['cholesterol'].astype('int')\nraw_data_df['oldpeak'] = raw_data_df['oldpeak'].astype('float')\n\n\n# Ensure all nominal and binary features are of object type\nraw_data_df[nominal_feats + binary_feats] = raw_data_df[nominal_feats + binary_feats].astype('object')\n\n# Convert Numeric features to proper Dtype and put into discrete bins then binarize\nraw_data_df[numeric_feats] = raw_data_df[numeric_feats].apply(pd.to_numeric)\n\n# Bin the continuous data into intervals\n# Set up discretizer\nest = KBinsDiscretizer(n_bins=2, encode='ordinal', strategy='uniform')\n\n# fit the numeric data into bins\nraw_data_df[numeric_feats] = est.fit_transform(raw_data_df[numeric_feats])\n\n# Convert bin indices to readable labels\nfor i, feature in enumerate(numeric_feats):\n    bin_edges = est.bin_edges_[i]\n    labels = [f\"{feature}_[{bin_edges[j]:.2f}-{bin_edges[j+1]:.2f}]\" for j in range(len(bin_edges)-1)]\n    raw_data_df[feature] = pd.cut(raw_data_df[feature], bins=bin_edges, labels=labels, include_lowest=True)\n\n# Convert the binned data to binary using one-hot encoding\ndata_df = pd.get_dummies(raw_data_df, columns=nominal_feats + binary_feats + numeric_feats)\n","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-06-27T15:33:58.197733Z","iopub.execute_input":"2024-06-27T15:33:58.198095Z","iopub.status.idle":"2024-06-27T15:33:58.736161Z","shell.execute_reply.started":"2024-06-27T15:33:58.198067Z","shell.execute_reply":"2024-06-27T15:33:58.734824Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"data_df.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.737728Z","iopub.execute_input":"2024-06-27T15:33:58.738189Z","iopub.status.idle":"2024-06-27T15:33:58.748869Z","shell.execute_reply.started":"2024-06-27T15:33:58.738143Z","shell.execute_reply":"2024-06-27T15:33:58.747347Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"ST slope_3                                                       bool\nST slope_downsloping                                             bool\nST slope_flat                                                    bool\nST slope_upsloping                                               bool\nresting ecg_having ST-T wave abnormality                         bool\nresting ecg_normal                                               bool\nresting ecg_probable or definite left ventricular hypertrophy    bool\nchest pain type_4                                                bool\nchest pain type_asymptomatic                                     bool\nchest pain type_atypical angina                                  bool\nchest pain type_non-anginal pain                                 bool\nsex_female                                                       bool\nsex_male                                                         bool\nfasting blood sugar_false                                        bool\nfasting blood sugar_true                                         bool\nexercise angina_no                                               bool\nexercise angina_yes                                              bool\ntarget_Normal                                                    bool\ntarget_heart disease                                             bool\nage_age_[28.00-52.50]                                            bool\nage_age_[52.50-77.00]                                            bool\nresting bp s_resting bp s_[0.00-100.00]                          bool\nresting bp s_resting bp s_[100.00-200.00]                        bool\ncholesterol_cholesterol_[0.00-301.50]                            bool\ncholesterol_cholesterol_[301.50-603.00]                          bool\nmax heart rate_max heart rate_[60.00-131.00]                     bool\nmax heart rate_max heart rate_[131.00-202.00]                    bool\noldpeak_oldpeak_[-2.60-1.80]                                     bool\noldpeak_oldpeak_[1.80-6.20]                                      bool\ndtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"Now the data is prepared for use with the apriori algorithm","metadata":{}},{"cell_type":"code","source":"data_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.751123Z","iopub.execute_input":"2024-06-27T15:33:58.751653Z","iopub.status.idle":"2024-06-27T15:33:58.785813Z","shell.execute_reply.started":"2024-06-27T15:33:58.751609Z","shell.execute_reply":"2024-06-27T15:33:58.784597Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"   ST slope_3  ST slope_downsloping  ST slope_flat  ST slope_upsloping  \\\n0       False                 False           True               False   \n1       False                  True          False               False   \n2       False                 False           True               False   \n3       False                  True          False               False   \n4       False                 False           True               False   \n\n   resting ecg_having ST-T wave abnormality  resting ecg_normal  \\\n0                                     False                True   \n1                                     False                True   \n2                                      True               False   \n3                                     False                True   \n4                                     False                True   \n\n   resting ecg_probable or definite left ventricular hypertrophy  \\\n0                                              False               \n1                                              False               \n2                                              False               \n3                                              False               \n4                                              False               \n\n   chest pain type_4  chest pain type_asymptomatic  \\\n0              False                         False   \n1              False                          True   \n2              False                         False   \n3               True                         False   \n4              False                          True   \n\n   chest pain type_atypical angina  ...  age_age_[28.00-52.50]  \\\n0                            False  ...                  False   \n1                            False  ...                  False   \n2                            False  ...                  False   \n3                            False  ...                  False   \n4                            False  ...                  False   \n\n   age_age_[52.50-77.00]  resting bp s_resting bp s_[0.00-100.00]  \\\n0                  False                                     True   \n1                  False                                     True   \n2                  False                                     True   \n3                  False                                     True   \n4                  False                                     True   \n\n   resting bp s_resting bp s_[100.00-200.00]  \\\n0                                      False   \n1                                      False   \n2                                      False   \n3                                      False   \n4                                      False   \n\n   cholesterol_cholesterol_[0.00-301.50]  \\\n0                                   True   \n1                                   True   \n2                                   True   \n3                                   True   \n4                                   True   \n\n   cholesterol_cholesterol_[301.50-603.00]  \\\n0                                    False   \n1                                    False   \n2                                    False   \n3                                    False   \n4                                    False   \n\n   max heart rate_max heart rate_[60.00-131.00]  \\\n0                                         False   \n1                                         False   \n2                                         False   \n3                                         False   \n4                                         False   \n\n   max heart rate_max heart rate_[131.00-202.00]  \\\n0                                          False   \n1                                          False   \n2                                          False   \n3                                          False   \n4                                          False   \n\n   oldpeak_oldpeak_[-2.60-1.80]  oldpeak_oldpeak_[1.80-6.20]  \n0                          True                        False  \n1                          True                        False  \n2                          True                        False  \n3                          True                        False  \n4                          True                        False  \n\n[5 rows x 29 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ST slope_3</th>\n      <th>ST slope_downsloping</th>\n      <th>ST slope_flat</th>\n      <th>ST slope_upsloping</th>\n      <th>resting ecg_having ST-T wave abnormality</th>\n      <th>resting ecg_normal</th>\n      <th>resting ecg_probable or definite left ventricular hypertrophy</th>\n      <th>chest pain type_4</th>\n      <th>chest pain type_asymptomatic</th>\n      <th>chest pain type_atypical angina</th>\n      <th>...</th>\n      <th>age_age_[28.00-52.50]</th>\n      <th>age_age_[52.50-77.00]</th>\n      <th>resting bp s_resting bp s_[0.00-100.00]</th>\n      <th>resting bp s_resting bp s_[100.00-200.00]</th>\n      <th>cholesterol_cholesterol_[0.00-301.50]</th>\n      <th>cholesterol_cholesterol_[301.50-603.00]</th>\n      <th>max heart rate_max heart rate_[60.00-131.00]</th>\n      <th>max heart rate_max heart rate_[131.00-202.00]</th>\n      <th>oldpeak_oldpeak_[-2.60-1.80]</th>\n      <th>oldpeak_oldpeak_[1.80-6.20]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 29 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sk-learn import train_test_split\n\nX =  data_df.drop(column='target')\ny = data_df['target']\n\ntrainX, testX, trainy, testy = train_test_split(X, y, test_size=0.25)","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:34:42.072213Z","iopub.execute_input":"2024-06-27T15:34:42.072621Z","iopub.status.idle":"2024-06-27T15:34:42.080661Z","shell.execute_reply.started":"2024-06-27T15:34:42.072585Z","shell.execute_reply":"2024-06-27T15:34:42.078908Z"},"trusted":true},"execution_count":18,"outputs":[{"traceback":["\u001b[0;36m  Cell \u001b[0;32mIn[18], line 1\u001b[0;36m\u001b[0m\n\u001b[0;31m    from sk-learn import train_test_split\u001b[0m\n\u001b[0m           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"],"ename":"SyntaxError","evalue":"invalid syntax (1062552063.py, line 1)","output_type":"error"}]},{"cell_type":"code","source":"from mlxtend.frequent_patterns import apriori, association_rules\n\n# Use the Apriori algorithm\nfrequent_itemsets = apriori(data_df, min_support=0.3, use_colnames=True)\nrules = association_rules(frequent_itemsets, metric='confidence', min_threshold=0.5)\n\n# Print the association rules\nprint(\"Association Rules:\\n\", rules)","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.800228Z","iopub.status.idle":"2024-06-27T15:33:58.800822Z","shell.execute_reply.started":"2024-06-27T15:33:58.800536Z","shell.execute_reply":"2024-06-27T15:33:58.80056Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Filter rules where consequents contain 'target_heart disease'\nfiltered_rules = rules[rules['consequents'].apply(lambda x: 'target_heart disease' in str(x))]\n\n# Print the filtered rules\nprint(\"Filtered Association Rules with target_heart disease:\\n\", filtered_rules)","metadata":{"execution":{"iopub.status.busy":"2024-06-27T15:33:58.803377Z","iopub.status.idle":"2024-06-27T15:33:58.803968Z","shell.execute_reply.started":"2024-06-27T15:33:58.803678Z","shell.execute_reply":"2024-06-27T15:33:58.803701Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Heart Disease Bussiness Problem Description**\n\nHeart disease is one of the leading causes of death globally, and early detection and prevention are critical to reducing mortality rates and improving patient outcomes.\n\nHospitals are constantly seeking advanced methods to identify high-risk individuals and understand the underlying factors contributing to heart disease.\n\nThis model aims to address the bussiness problem of enhancing the indentification and understanding of heart disease risk factors through data-driven insights.\n\n**Objective**\n\nThe primary objective is to leverage historical patient data to discover patterns and associations that can help in early detection, prevention, and management of heart disease. By identifying significant risk factors and thier interrelationships, healthcare providers can make more informed decisions, tailor preventive measures, and improve patient care\n\n**Challenges**\n\n1. **Complexity of Data:** Patient data is often complex and multidimensional, making it challenging to identify relevant patterns manually.\n2. **Early Detection:** Early detection of heart disease risk factors is crucial for prevention, but traditional methods may not always capture the intricate relationships between different health indicators.\n3. **Resource Allocation:** Efficiently allocating medical resources and interventions to high-risk individuals requires accurate identification of those individuals based on their risk profiles.\n4. **Personalized Care:** Providing personalized care plans based on individual risk factors necessitates a deep understanding of how these factors interact.\n\n**Model Role in Addressing the Problem:**\n\n**Association Rule Mining:**\nThe model uses Apriori algorithm to identify frequent itemsets and generate association rules from patient data. These rules highlight the co-occurence of various health indicators and their relationship with heart disease.\n\n**Benefits**\n1. **Data-Driven Insights:** The model provides healthcare providers with data-driven insights into the risk factors associated with heart disease. For instance, it can reveal how cetain conditions like high cholesterol, specific age ranges, or types of chest pain are linked to heart disease.\n2. **Early Detection:** By understanding the combinations of factors that frequently precede heart disease diagnoses, the model aids in early detection. This allows for timely interventions that can prevent the progression of the disease.\n3. **Resource Optimization:** The insights from the model help in identifying high-risk patients, enabling healthcare providers to prioritize resources and interventions for those who need them most.\n4. **Personalized Treatment Plans:** The detailed rules generated by the model support the creation of personalized treatment and prevention plans. For example, a patient with a combination of factors identified as high risk can receive targeted lifestyle advice, monitoring, and medical treatment.\n","metadata":{}},{"cell_type":"markdown","source":"**Interpretation of Results**\n\n1.**Rule 5:** \n- **Antecedents**:(ST slope_downsloping), **Consequents**:(target_heart disease)\n- **Support**: 0.3857 (38.57% of transactions contain both antecedents and consequences\n- **Confidence**: 0.7887 (78.87% of transations that contain the antecedents also contain the consequents\n- **Lift**: 1.49 (The occurance of the consequences is more likely when the antecedents is present than by chance)\n- **Leverage**: 0.1272 (indicates positive association)\n- **Conviction**: 2.23 (Strong dependence of the consequent on the antecedent)\n- **Zhang's Metric**: 0.645 (indicates strong positive association)\n- **Interpretation**: If a transaction contains (ST slope_downsloping), there is a 78.87% chance it will also contain (target_heart disease). The lift is significantly greater than 1, indicating a strong positive correlation. The leverage and Zhang's Metric values also indicate a strong positive assocation.\n\n2.**Rule 38:**\n- **Antecedents**:(chest pain type_4), **Consequents**:(target_heart disease)\n- **Support**: 0.4059 (40.59% of transactions contain both antecedents and consequents)\n- **Confidence**: 0.7728 (77.28% of transactions that contain (chest pain type_4) also contain (target_heart disease)\n- **Lift**: 1.46 (The occurence of the consequents is more likely when the antecedents is present than by chance\n- **Leverage**: 0.1283 (A positive value indicating a positive association)\n- **Conviction**: 2.075 (There is a strong dependence of the consequent on the antecedent)\n- **Zhang's Metric**: 0.6656 (indicates a strong positive association)\n- **Interpretation**: If a transaction contains (chest pain type_4), there is a 77.28% chance it will also contain (target_heart disease). The lift is significantly greater than 1, indicating a strong positive correlation. The leverage and Zheng's Metric values also indicate a strong positive correlation\n\n3.**Rule 51:**\n- **Antecedents**:(sex_male), **Consequents**:(target_heart disease)\n- **Support**: 0.469748 (46.97% of transactions contain both antecedents and consequents)\n- **Confidence**: 0.614961 (61.50% of transactions that contain (sex_male) also contain (target_heart disease))\n- **Lift**: 1.163441 (The occurrence of (target_heart disease) is more likely when (sex_male) is present than by chance)\n- **Leverage**: 0.065990 (A positive value indicating a positive association)\n- **Conviction**: 1.224367 (There is a moderate dependence of the consequent on the antecedent)\n- **Zhang's Metric**: Zhang's Metric: 0.594917 (Indicates a moderate positive association)\n- **Interpretation**: If a transaction contains (sex_male), there is a 61.50% chance it will also contain (target_heart disease). The lift is greater than 1, indicating a positive correlation. The leverage and Zhang's Metric values also indicate a moderate positive association.\n\n4.**Rule 78:**\n- **Antecedents**:(exercise angina_yes), **Consequents**:(target_heart disease)\n- **Support**: 0.321849 (32.18% of transactions contain both antecedents and consequents)\n- **Confidence**: 0.830803 (83.08% of transactions that contain (exercise angina_yes) also contain (target_heart disease))\n- **Lift**: (The occurrence of (target_heart disease) is more likely when (exercise angina_yes) is present than by chance)\n- **Leverage**: 0.117083 (A positive value indicating a positive association)\n- **Conviction**: 2.786264 (There is a strong dependence of the consequent on the antecedent)\n- **Zhang's Metric**: 0.593828 (Indicates a strong positive association)\n- **Interpretation**:  If a transaction contains (exercise angina_yes), there is an 83.08% chance it will also contain (target_heart disease). The lift is significantly greater than 1, indicating a strong positive correlation. The leverage and Zhang's Metric values also indicate a strong positive association.\n\n5.**Rule 86:**\n- **Antecedents**:(esting bp s_resting bp s_[0.00-100.00]), **Consequents**:(target_heart disease))\n- **Support**: 0.528571 (52.86% of transactions contain both antecedents and consequents)\n- **Confidence**: 0.528571 (52.86% of transactions that contain (resting bp s_resting bp s_[0.00-100.00]) also contain (target_heart disease))\n- **Lift**: 1.000000 (The occurrence of (target_heart disease) is neither more nor less likely when (resting bp s_resting bp s_[0.00-100.00]) is present than by chance)\n- **Leverage**: 0.000000 (No additional information provided by the association)\n- **Conviction**: 1.000000 (No dependency between antecedent and consequent)\n- **Zhang's Metric**: 0.000000 (No association)\n- **Interpretation**: If a transaction contains (resting bp s_resting bp s_[0.00-100.00]), there is a 52.86% chance it will also contain (target_heart disease). The lift is 1, indicating no correlation. The leverage, conviction, and Zhang's Metric values indicate no association.","metadata":{}},{"cell_type":"markdown","source":"**Key Risk Factors of Heart Disease According to the Model**\n\n1. **ST slope_downsloping** - Indicates myocardial ischemia\n2. **Chest Pain type_4** - Asymptomatic Chest pain\n3. **Male Gender** - Men tend to have heart diease more often than women\n4. **Exercise-Induced Angina** - Chest pain that occurs during exercise\n\n**Discussion**\n\nWith the exception of the identification of asymptomatic chest pain, the identified risk factors are already known to be indicators of heart disease. This suggests that the model is capable of identifying risk factors that contribute to heart disease diagnoses.\n\nFurther testing should be done with a much larger dataset, as well as with data that contains more health feature data to identify unique patterns between health factors that may not already be associated with heart disease.","metadata":{}}]}